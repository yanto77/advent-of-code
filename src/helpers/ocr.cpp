#include "ocr.h"

namespace 
{
    constexpr size_t LETTER_SIZE = 4*6;

    const std::array<const char*, 26> OCR_LETTERS
    {
        /* A */ "........................",
        /* B */ "........................",
        /* C */ ".##.#..##...#...#..#.##.",
        /* D */ "........................",
        /* E */ "........................",
        /* F */ "#####...###.#...#...#...",
        /* G */ ".##.#..##...#.###..#.###",
        /* H */ "........................",
        /* I */ "........................",
        /* J */ "..##...#...#...##..#.##.",
        /* K */ "........................",
        /* L */ "#...#...#...#...#...####",
        /* M */ "........................",
        /* N */ "........................",
        /* O */ "........................",
        /* P */ "........................",
        /* Q */ "........................",
        /* R */ "........................",
        /* S */ "........................",
        /* T */ "........................",
        /* U */ "........................",
        /* V */ "........................",
        /* W */ "........................",
        /* X */ "........................",
        /* Y */ "........................",
        /* Z */ "####...#..#..#..#...####",
    };

    bool is_equal(const char* lhs, const std::array<char, LETTER_SIZE>& rhs)
    {
        for (size_t i = 0; i < LETTER_SIZE; i++)
            if (lhs[i] != rhs[i])
                return false;

        return true;
    }
}

char get_letter(const std::array<char, LETTER_SIZE>& input)
{
    for (size_t i = 0; i < OCR_LETTERS.size(); i++)
    {
        if (is_equal(OCR_LETTERS[i], input))
        {
            return (char)('A' + i);
        }
    }

    assert(false);
    return 0;
}
